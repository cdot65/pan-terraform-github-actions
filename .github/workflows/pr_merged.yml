name: Deploy Firewall configurations to production (PR merged)

on:
  pull_request:
    branches:
      - main
    types:
      - closed

jobs:
  deploy:
    if: github.event.pull_request.merged == true
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.17

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18

      - name: Install jq
        run: sudo apt-get install jq

      - name: Build firewall-commit binary
        run: |
          cd scripts
          go mod init github.com/cdot65/pan-terraform-github-actions
          go mod tidy
          go build -o firewall-commit firewall-commit.go

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.1.0

      - name: Terraform Init
        run: |
          cd san-vfw-01
          terraform workspace new san-vfw-01
          terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Apply
        working-directory: san-vfw-01/
        run: terraform apply -auto-approve | tee apply_output.txt
        env:
          TF_VAR_panos_username: ${{ secrets.PANOS_USERNAME }}
          TF_VAR_panos_password: ${{ secrets.PANOS_PASSWORD }}

      - uses: actions/github-script@v5
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ðŸ‘‹ Testing within Actions!'
            })

      - name: Commit Firewall Configurations
        run: ./scripts/firewall-commit -auth san-vfw-01/auth.json
